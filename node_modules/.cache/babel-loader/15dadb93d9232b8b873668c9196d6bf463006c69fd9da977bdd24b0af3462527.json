{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Go Project\\\\frontend\\\\src\\\\components\\\\BookingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingPage() {\n  _s();\n  const {\n    carId\n  } = useParams();\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const [timeSlots, setTimeSlots] = useState([]); // Initialize with an empty array\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/cars/${carId}`).then(response => {\n      // Make sure property names match the data structure\n      setTimeSlots(response.data.timeSlots);\n    }).catch(error => {\n      console.error(\"Error fetching time slots:\", error);\n    });\n  }, [carId]);\n  const handleBooking = () => {\n    if (selectedTimeSlot) {\n      axios.post(`http://localhost:5000/api/cars/${carId}/book`, {\n        timeSlot: selectedTimeSlot\n      }).then(response => {\n        alert(\"Booking successful!\");\n      }).catch(error => {\n        console.error(\"Error booking car:\", error);\n      });\n    } else {\n      alert(\"Please select a time slot.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book a Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Time Slot:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTimeSlot,\n      onChange: e => setSelectedTimeSlot(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a time slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), timeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeSlot.id,\n        children: [timeSlot.StartTime, \" - \", timeSlot.EndTime, \" \"]\n      }, timeSlot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Book Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n// function BookingPage() {\n//   const { carId } = useParams()\n//   const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\")\n//   const [timeSlots, setTimeSlots] = useState([])\n//   //console.log(\"Timeslot \",timeSlots)\n//   //console.log(\"Car ID\", carId)\n\n//   useEffect(() => {\n//     axios\n//       .get(`http://localhost:5000/api/cars/${carId}`)\n//       .then((response) => {\n//         setTimeSlots(response.data.timeSlots);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching time slots:\", error);\n//       });\n//   }, [carId]);  \n\n//   const handleBooking = () => {\n//     if (selectedTimeSlot) {\n//       axios\n//         .post(`http://localhost:5000/api/cars/${carId}/book`, {\n//           timeSlot: selectedTimeSlot,\n//         })\n//         .then((response) => {\n//           alert(\"Booking successful!\")\n//         })\n//         .catch((error) => {\n//           console.error(\"Error booking car:\", error)\n//         })\n//     } else {\n//       alert(\"Please select a time slot.\")\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h1>Book a Car</h1>\n//       <label>Select a Time Slot:</label>\n//       <p>{timeSlots}</p>\n//       <select\n//         value={selectedTimeSlot}\n//         onChange={(e) => setSelectedTimeSlot(e.target.value)}\n//       >\n//         <option value=\"\">Select a time slot</option>\n//         {timeSlots.map((timeSlot) => (\n//           <option key={timeSlot.id} value={timeSlot.id}>\n//             {timeSlot.startTime} - {timeSlot.endTime}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button onClick={handleBooking}>Book Car</button>\n//     </div>\n//   )\n// }\n_s(BookingPage, \"xmTZtdvHrChNMZFACB/5JG0J7Gs=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","BookingPage","_s","carId","selectedTimeSlot","setSelectedTimeSlot","timeSlots","setTimeSlots","get","then","response","data","catch","error","console","handleBooking","post","timeSlot","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","id","StartTime","EndTime","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Go Project/frontend/src/components/BookingPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\n\r\nfunction BookingPage() {\r\n  const { carId } = useParams();\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\r\n  const [timeSlots, setTimeSlots] = useState([]); // Initialize with an empty array\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/api/cars/${carId}`)\r\n      .then((response) => {\r\n        // Make sure property names match the data structure\r\n        setTimeSlots(response.data.timeSlots);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching time slots:\", error);\r\n      });\r\n  }, [carId]);\r\n\r\n  const handleBooking = () => {\r\n    if (selectedTimeSlot) {\r\n      axios\r\n        .post(`http://localhost:5000/api/cars/${carId}/book`, {\r\n          timeSlot: selectedTimeSlot,\r\n        })\r\n        .then((response) => {\r\n          alert(\"Booking successful!\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error booking car:\", error);\r\n        });\r\n    } else {\r\n      alert(\"Please select a time slot.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Book a Car</h1>\r\n      <label>Select a Time Slot:</label>\r\n      <select\r\n        value={selectedTimeSlot}\r\n        onChange={(e) => setSelectedTimeSlot(e.target.value)}\r\n      >\r\n        <option value=\"\">Select a time slot</option>\r\n        {timeSlots.map((timeSlot) => (\r\n          <option key={timeSlot.id} value={timeSlot.id}>\r\n            {timeSlot.StartTime} - {timeSlot.EndTime} {/* Property names should match */}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={handleBooking}>Book Car</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function BookingPage() {\r\n//   const { carId } = useParams()\r\n//   const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\")\r\n//   const [timeSlots, setTimeSlots] = useState([])\r\n//   //console.log(\"Timeslot \",timeSlots)\r\n//   //console.log(\"Car ID\", carId)\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`http://localhost:5000/api/cars/${carId}`)\r\n//       .then((response) => {\r\n//         setTimeSlots(response.data.timeSlots);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching time slots:\", error);\r\n//       });\r\n//   }, [carId]);  \r\n\r\n//   const handleBooking = () => {\r\n//     if (selectedTimeSlot) {\r\n//       axios\r\n//         .post(`http://localhost:5000/api/cars/${carId}/book`, {\r\n//           timeSlot: selectedTimeSlot,\r\n//         })\r\n//         .then((response) => {\r\n//           alert(\"Booking successful!\")\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error booking car:\", error)\r\n//         })\r\n//     } else {\r\n//       alert(\"Please select a time slot.\")\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Book a Car</h1>\r\n//       <label>Select a Time Slot:</label>\r\n//       <p>{timeSlots}</p>\r\n//       <select\r\n//         value={selectedTimeSlot}\r\n//         onChange={(e) => setSelectedTimeSlot(e.target.value)}\r\n//       >\r\n//         <option value=\"\">Select a time slot</option>\r\n//         {timeSlots.map((timeSlot) => (\r\n//           <option key={timeSlot.id} value={timeSlot.id}>\r\n//             {timeSlot.startTime} - {timeSlot.endTime}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n\r\n//       <button onClick={handleBooking}>Book Car</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default BookingPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}