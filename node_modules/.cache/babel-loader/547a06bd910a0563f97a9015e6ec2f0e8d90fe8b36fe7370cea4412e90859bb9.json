{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshav\\\\Desktop\\\\Go Project\\\\frontend\\\\src\\\\components\\\\BookingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingPage() {\n  _s();\n  const {\n    carId\n  } = useParams();\n  let carNum;\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [carid, setCarID] = useState();\n  console.log(\"TS: \", timeSlots);\n  console.log(\"Car ID: \", carid);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/booking/${carNum}`).then(response => {\n      //setCarID(response.data.id);\n      setCarID(carNum);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [carId]);\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:5000/api/cars\")\n  //     .then((response) => {\n  //       setTimeSlots(response.data)\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error fetching car data:\", error)\n  //     })\n  // }, [])\n\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:3000/booking/${carId}`)\n  //     .then((response) => {\n  //       setCarID(carId)\n  //       //setTimeSlots(response.data.timeSlots);\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error fetching time slots:\", error);\n  //     });\n  // }, [carId]);\n\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:5000/api/cars/${carId}`)\n  //     .then((response) => {\n  //       //setCarID(carId)\n  //       //setTimeSlots(response.data.timeSlots);\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error fetching time slots:\", error);\n  //     });\n  // }, [carId]);\n\n  const handleBooking = () => {\n    if (selectedTimeSlot) {\n      axios.post(`http://localhost:5000/api/cars/${carId}/book`, {\n        timeSlot: selectedTimeSlot\n      }).then(response => {\n        alert(\"Booking successful!\");\n      }).catch(error => {\n        console.error(\"Error booking car:\", error);\n      });\n    } else {\n      alert(\"Please select a time slot.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book a Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Time Slot:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTimeSlot,\n      onChange: e => setSelectedTimeSlot(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a time slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), timeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: timeSlot.id,\n        children: [timeSlot.StartTime, \" - \", timeSlot.EndTime]\n      }, timeSlot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Book Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingPage, \"xhXFTNLwr4UTnwGohmrHwHhuQN4=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","BookingPage","_s","carId","carNum","selectedTimeSlot","setSelectedTimeSlot","timeSlots","setTimeSlots","carid","setCarID","console","log","get","then","response","catch","error","handleBooking","post","timeSlot","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","id","StartTime","EndTime","onClick","_c","$RefreshReg$"],"sources":["C:/Users/reshav/Desktop/Go Project/frontend/src/components/BookingPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nfunction BookingPage() {\r\n  const { carId } = useParams();\r\n  let carNum;\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\r\n  const [timeSlots, setTimeSlots] = useState([]); \r\n  const [carid, setCarID] = useState();\r\n\r\n  console.log(\"TS: \",timeSlots)\r\n  console.log(\"Car ID: \",carid)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3000/booking/${carNum}`)\r\n      .then((response) => {\r\n        //setCarID(response.data.id);\r\n        setCarID(carNum);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, [carId]);\r\n  \r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"http://localhost:5000/api/cars\")\r\n  //     .then((response) => {\r\n  //       setTimeSlots(response.data)\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching car data:\", error)\r\n  //     })\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(`http://localhost:3000/booking/${carId}`)\r\n  //     .then((response) => {\r\n  //       setCarID(carId)\r\n  //       //setTimeSlots(response.data.timeSlots);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching time slots:\", error);\r\n  //     });\r\n  // }, [carId]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(`http://localhost:5000/api/cars/${carId}`)\r\n  //     .then((response) => {\r\n  //       //setCarID(carId)\r\n  //       //setTimeSlots(response.data.timeSlots);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching time slots:\", error);\r\n  //     });\r\n  // }, [carId]);\r\n\r\n  const handleBooking = () => {\r\n    if (selectedTimeSlot) {\r\n      axios\r\n        .post(`http://localhost:5000/api/cars/${carId}/book`, {\r\n          timeSlot: selectedTimeSlot,\r\n        })\r\n        .then((response) => {\r\n          alert(\"Booking successful!\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error booking car:\", error);\r\n        });\r\n    } else {\r\n      alert(\"Please select a time slot.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Book a Car</h1>\r\n      <label>Select a Time Slot:</label>\r\n      <select\r\n        value={selectedTimeSlot}\r\n        onChange={(e) => setSelectedTimeSlot(e.target.value)}\r\n      >\r\n        <option value=\"\">Select a time slot</option>\r\n        {timeSlots.map((timeSlot) => (\r\n          <option key={timeSlot.id} value={timeSlot.id}>\r\n            {timeSlot.StartTime} - {timeSlot.EndTime}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={handleBooking}>Book Car</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookingPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}